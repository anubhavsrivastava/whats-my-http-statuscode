[
	{
		"code": 400,
		"msg": "400 BAD REQUEST",
		"description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
		"additionalInfo": [],
		"more": "https://httpstatuses.com/400"
	},
	{
		"code": 401,
		"msg": "401 UNAUTHORIZED",
		"description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
		"additionalInfo": [
			"The server generating a 401 response MUST send a WWW-Authenticate header field containing at least one challenge applicable to the target resource.",
			"If the request included authentication credentials, then the 401 response indicates that authorization has been refused for those credentials. The user agent MAY repeat the request with a new or replaced Authorization header field. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user agent SHOULD present the enclosed representation to the user, since it usually contains relevant diagnostic information."
		],
		"more": "https://httpstatuses.com/401"
	},
	{
		"code": 402,
		"msg": "402 PAYMENT REQUIRED",
		"description": "Reserved for future use.",
		"additionalInfo": ["Because Money"],
		"more": "https://httpstatuses.com/402"
	},
	{
		"code": 403,
		"msg": "403 FORBIDDEN",
		"description": "The server understood the request but refuses to authorize it.",
		"additionalInfo": [
			"A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).",
			"If authentication credentials were provided in the request, the server considers them insufficient to grant access. The client SHOULD NOT automatically repeat the request with the same credentials. The client MAY repeat the request with new or different credentials. However, a request might be forbidden for reasons unrelated to the credentials.",
			"An origin server that wishes to \"hide\" the current existence of a forbidden target resource MAY instead respond with a status code of 404 Not Found."
		],
		"more": "https://httpstatuses.com/403"
	},
	{
		"code": 404,
		"msg": "404 NOT FOUND",
		"description": "The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.",
		"additionalInfo": [
			"A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 Gone status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
			"A 404 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls."
		],
		"more": "https://httpstatuses.com/404"
	},
	{
		"code": 405,
		"msg": "405 METHOD NOT ALLOWED",
		"description": "The method received in the request-line is known by the origin server but not supported by the target resource.",
		"additionalInfo": ["The origin server MUST generate an Allow header field in a 405 response containing a list of the target resource's currently supported methods.", "A 405 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls."],
		"more": "https://httpstatuses.com/405"
	},
	{
		"code": 407,
		"msg": "407 PROXY AUTHENTICATION REQUIRED",
		"description": "Similar to 401 Unauthorized, but it indicates that the client needs to authenticate itself in order to use a proxy.",
		"additionalInfo": ["The proxy MUST send a Proxy-Authenticate header field containing a challenge applicable to that proxy for the target resource. The client MAY repeat the request with a new or replaced Proxy-Authorization header field."],
		"more": "https://httpstatuses.com/407"
	},
	{
		"code": 408,
		"msg": "408 REQUEST TIMEOUT",
		"description": "The server did not receive a complete request message within the time that it was prepared to wait.",
		"additionalInfo": ["A server SHOULD send the \"close\" connection option in the response, since 408 implies that the server has decided to close the connection rather than continue waiting. If the client has an outstanding request in transit, the client MAY repeat that request on a new connection."],
		"more": "https://httpstatuses.com/408"
	},
	{
		"code": 409,
		"msg": "409 CONFLICT",
		"description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the user might be able to resolve the conflict and resubmit the request.",
		"additionalInfo": [
			"The server SHOULD generate a payload that includes enough information for a user to recognize the source of the conflict.",
			"Conflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the representation being PUT included changes to a resource that conflict with those made by an earlier (third-party) request, the origin server might use a 409 response to indicate that it can't complete the request. In this case, the response representation would likely contain information useful for merging the differences based on the revision history."
		],
		"more": "https://httpstatuses.com/409"
	},
	{
		"code": 410,
		"msg": "410 GONE",
		"description": "The target resource is no longer available at the origin server and that this condition is likely to be permanent.",
		"additionalInfo": [
			"If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 Not Found ought to be used instead.",
			"The 410 response is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable and that the server owners desire that remote links to that resource be removed. Such an event is common for limited-time, promotional services and for resources belonging to individuals no longer associated with the origin server's site. It is not necessary to mark all permanently unavailable resources as \"gone\" or to keep the mark for any length of time -- that is left to the discretion of the server owner.",
			"A 410 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls."
		],
		"more": "https://httpstatuses.com/410"
	},
	{
		"code": 411,
		"msg": "411 LENGTH REQUIRED",
		"description": "The server refuses to accept the request without a defined Content-Length.",
		"additionalInfo": ["The client MAY repeat the request if it adds a valid Content-Length header field containing the length of the message body in the request message."],
		"more": "https://httpstatuses.com/411"
	},
	{
		"code": 412,
		"msg": "412 PRECONDITION FAILED",
		"description": "One or more conditions given in the request header fields evaluated to false when tested on the server.",
		"additionalInfo": ["This response code allows the client to place preconditions on the current resource state (its current representations and metadata) and, thus, prevent the request method from being applied if the target resource is in an unexpected state."],
		"more": "https://httpstatuses.com/412"
	},
	{
		"code": 413,
		"msg": "413 PAYLOAD TOO LARGE",
		"description": "The server is refusing to process a request because the request payload is larger than the server is willing or able to process.",
		"additionalInfo": ["The server MAY close the connection to prevent the client from continuing the request.", "If the condition is temporary, the server SHOULD generate a Retry-After header field to indicate that it is temporary and after what time the client MAY try again."],
		"more": "https://httpstatuses.com/413"
	},
	{
		"code": 414,
		"msg": "414 REQUEST-URI TOO LONG",
		"description": "The server is refusing to service the request because the request-target is longer than the server is willing to interpret.",
		"additionalInfo": [
			"This rare condition is only likely to occur when a client has improperly converted a POST request to a GET request with long query information, when the client has descended into a \"black hole\" of redirection (e.g., a redirected URI prefix that points to a suffix of itself) or when the server is under attack by a client attempting to exploit potential security holes.",
			"A 414 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls ."
		],
		"more": "https://httpstatuses.com/414"
	},
	{
		"code": 415,
		"msg": "415 UNSUPPORTED MEDIA TYPE",
		"description": "The origin server is refusing to service the request because the payload is in a format not supported by this method on the target resource.",
		"additionalInfo": ["The format problem might be due to the request's indicated Content-Type or Content-Encoding, or as a result of inspecting the data directly."],
		"more": "https://httpstatuses.com/415"
	},
	{
		"code": 416,
		"msg": "416 REQUESTED RANGE NOT SATISFIABLE",
		"description": "None of the ranges in the request's Range header field overlap the current extent of the selected resource or that the set of ranges requested has been rejected due to invalid ranges or an excessive request of small or overlapping ranges.",
		"additionalInfo": [
			"For byte ranges, failing to overlap the current extent means that the first-byte-pos of all of the byte-range-spec values were greater than the current length of the selected representation. When this status code is generated in response to a byte-range request, the sender SHOULD generate a Content-Range header field specifying the current length of the selected representation.",
			"Note: Because servers are free to ignore Range, many implementations will simply respond with the entire selected representation in a 200 OK response. That is partly because most clients are prepared to receive a 200 OK to complete the task (albeit less efficiently) and partly because clients might not stop making an invalid partial request until they have received a complete representation. Thus, clients cannot depend on receiving a 416 Range Not Satisfiable response even when it is most appropriate."
		],
		"more": "https://httpstatuses.com/416"
	},
	{
		"code": 417,
		"msg": "417 EXPECTATION FAILED",
		"description": "The expectation given in the request's Expect header field could not be met by at least one of the inbound servers.",
		"additionalInfo": [],
		"more": "https://httpstatuses.com/417"
	},
	{
		"code": 418,
		"msg": "418 I'M A TEAPOT",
		"description": "Any attempt to brew coffee with a teapot should result in the error code \"418 I'm a teapot\". The resulting entity body MAY be short and stout.",
		"additionalInfo": [],
		"more": "https://httpstatuses.com/418"
	},
	{
		"code": 420,
		"msg": "420 Enhance Your Calm (Twitter)",
		"description": "Not part of the HTTP standard, but returned by version 1 of the Twitter Search and Trends API when the client is being rate limited. Other services may wish to implement the 429 Too Many Requests response code instead.",
		"additionalInfo": [],
		"more": ""
	},
	{
		"code": 421,
		"msg": "421 MISDIRECTED REQUEST",
		"description": "The request was directed at a server that is not able to produce a response. This can be sent by a server that is not configured to produce responses for the combination of scheme and authority that are included in the request URI.",
		"additionalInfo": [
			"Clients receiving a 421 Misdirected Request response from a server MAY retry the request -- whether the request method is idempotent or not -- over a different connection. This is possible if a connection is reused or if an alternative service is selected ALT-SVC.",
			"This status code MUST NOT be generated by proxies.",
			"A 421 response is cacheable by default, i.e., unless otherwise indicated by the method definition or explicit cache controls."
		],
		"more": "https://httpstatuses.com/421"
	},
	{
		"code": 422,
		"msg": "422 UNPROCESSABLE ENTITY",
		"description": "The server understands the content type of the request entity (hence a 415 Unsupported Media Type status code is inappropriate), and the syntax of the request entity is correct (thus a 400 Bad Request status code is inappropriate) but was unable to process the contained instructions.",
		"additionalInfo": ["For example, this error condition may occur if an XML request body contains well-formed (i.e., syntactically correct), but semantically erroneous, XML instructions."],
		"more": "https://httpstatuses.com/422"
	},
	{
		"code": 423,
		"msg": "423 LOCKED",
		"description": "The source or destination resource of a method is locked.",
		"additionalInfo": ["This response SHOULD contain an appropriate precondition or postcondition code, such as 'lock-token-submitted' or 'no-conflicting-lock'."],
		"more": "https://httpstatuses.com/423"
	},
	{
		"code": 424,
		"msg": "424 FAILED DEPENDENCY",
		"description": "The method could not be performed on the resource because the requested action depended on another action and that action failed.",
		"additionalInfo": ["For example, if a command in a PROPPATCH method fails, then, at minimum, the rest of the commands will also fail with 424 Failed Dependency."],
		"more": "https://httpstatuses.com/424"
	},
	{
		"code": 426,
		"msg": "426 UPGRADE REQUIRED",
		"description": "The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol.",
		"additionalInfo": ["The server MUST send an Upgrade header field in a 426 response to indicate the required protocol(s)"],
		"more": "https://httpstatuses.com/426"
	},
	{
		"code": 428,
		"msg": "428 PRECONDITION REQUIRED",
		"description": "The origin server requires the request to be conditional.",
		"additionalInfo": [
			"Its typical use is to avoid the \"lost update\" problem, where a client GETs a resource's state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. By requiring requests to be conditional, the server can assure that clients are working with the correct copies.",
			"Responses using this status code SHOULD explain how to resubmit the request successfully.",
			"Responses with the 428 status code MUST NOT be stored by a cache."
		],
		"more": "https://httpstatuses.com/428"
	},
	{
		"code": 429,
		"msg": "429 TOO MANY REQUESTS",
		"description": "The user has sent too many requests in a given amount of time (\"rate limiting\").",
		"additionalInfo": [
			"The response representations SHOULD include details explaining the condition, and MAY include a Retry-After header indicating how long to wait before making a new request.",
			"Note that this specification does not define how the origin server identifies the user, nor how it counts requests. For example, an origin server that is limiting request rates can do so based upon counts of requests on a per-resource basis, across the entire server, or even among a set of servers. Likewise, it might identify the user by its authentication credentials, or a stateful cookie.",
			"Responses with the 429 status code MUST NOT be stored by a cache."
		],
		"more": "https://httpstatuses.com/429"
	},
	{
		"code": 431,
		"msg": "431 REQUEST HEADER FIELDS TOO LARGE",
		"description": "The server is unwilling to process the request because its header fields are too large. The request MAY be resubmitted after reducing the size of the request header fields.",
		"additionalInfo": ["It can be used both when the set of request header fields in total is too large, and when a single header field is at fault. In the latter case, the response representation SHOULD specify which header field was too large.", "Responses with the 431 status code MUST NOT be stored by a cache."],
		"more": "https://httpstatuses.com/431"
	},
	{
		"code": 444,
		"msg": "444 CONNECTION CLOSED WITHOUT RESPONSE",
		"description": "A non-standard status code used to instruct nginx to close the connection without sending a response to the client, most commonly used to deny malicious or malformed requests.",
		"additionalInfo": ["This status code is not seen by the client, it only appears in nginx log files."],
		"more": "https://httpstatuses.com/444"
	},
	{
		"code": 451,
		"msg": "451 UNAVAILABLE FOR LEGAL REASONS",
		"description": "The server is denying access to the resource as a consequence of a legal demand.",
		"additionalInfo": [
			"The server in question might not be an origin server. This type of legal demand typically most directly affects the operations of ISPs and search engines.",
			"Responses using this status code SHOULD include an explanation, in the response body, of the details of the legal demand: the party making it, the applicable legislation or regulation, and what classes of person and resource it applies to.",
			"The use of the 451 status code implies neither the existence nor non- existence of the resource named in the request. That is to say, it is possible that if the legal demands were removed, a request for the resource still might not succeed.",
			"Note that in many cases clients can still access the denied resource by using technical countermeasures such as a VPN or the Tor network.",
			"A 451 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls; see RFC7234."
		],
		"more": "https://httpstatuses.com/451"
	},
	{
		"code": 499,
		"msg": "499 CLIENT CLOSED REQUEST",
		"description": "A non-standard status code introduced by nginx for the case when a client closes the connection while nginx is processing the request.",
		"additionalInfo": [],
		"more": "https://httpstatuses.com/499"
	}
]
